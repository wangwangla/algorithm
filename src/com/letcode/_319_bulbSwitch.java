package com.letcode;

/**
 * 根据题目给定的数据范围为 10^910
 * 9
 *  ，所以，今天这道题我们肯定不能使用暴力来计算每一轮的结果。
 *
 * 我们可以尝试来找找规律。
 *
 * 首先，对于第 x 个灯泡，它经过 n 轮，什么情况下它还亮着呢？
 *
 * 显然，对 x 做了奇数次的切换才能保证 x 是亮着的。
 *
 * 所以，我们要做的，就是找到第几个位置的灯泡会做奇数次切换。
 *
 * 那么，下一个问题：什么情况下会切换第 x 个灯泡的开关？
 *
 * 显然，当轮数 k 是 x 的约数时才会切换第 x 个灯泡的开关。
 *
 * 比如，给定 n 为 9，x 为 6，很明显，只有第 1、2、3、6 轮会切换第 6 个灯泡的开关，所以，最后第 6 个灯泡是灭的，因为它做了偶数次切换。
 *
 * 而我们要找的是做了奇数次切换的灯泡，也就是约数个数为奇数的灯泡。
 *
 * 其实，这里有个规律，完全平方数的约数个数正好是奇数个，比如，9 的约数分别为 1、3、9，16 的约数分别为 1、2、4、8、16，而非完全平方数的约数个数都是偶数个，比如，8 的约数分别为 1、2、4、8，你也可以再举几个例子看看。
 *
 * 这个也很好理解，正常来说，每个数的约数都是偶数个，比如，对于 16 来说，16 = 1 x 16 = 2 x 8 = 4 x 4，都是成对出现的，但是对于 16 的约数 4 来说，它正好出现了两次，所以，隐藏一次，我们说 16 的约数个数为 5 个，而不是 6 个。
 *
 * 所以，最后的问题就转换成了：求小于等于 n 的完全平方数的个数。
 *
 * 这个答案就很明显了，就是 \lfloor \sqrt n \rfloor⌊
 * n
 * ​
 *  ⌋，其中，\lfloor x \rfloor⌊x⌋ 表示向下取整。
 *
 * 作者：tong-zhu
 * 链接：https://leetcode.cn/problems/bulb-switcher/solution/tong-ge-lai-shua-ti-la-319-deng-pao-kai-7bd23/
 * 来源：力扣（LeetCode）
 * 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
 */
public class _319_bulbSwitch {
    public static void main(String[] args) {
        _319_bulbSwitch bulbSwitch = new _319_bulbSwitch();
        bulbSwitch.bulbSwitch(4);
    }
    public int bulbSwitch(int n) {
        return (int) Math.sqrt(n);
    }
}
